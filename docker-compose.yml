version: '3.7'

services:
  camunda-nginx:
    image: nginx:1.20.1
    restart: always
    container_name: camunda-plugins-gateway-$ENVIRONMENT
    hostname: 'camunda-gateway'
    depends_on:
      - camunda-engine1
    ports:
      - "$CLUSTER_GATE_PORT:443"
    expose:
      - 443
    volumes:
      - ./cfg/camunda-${ENVIRONMENT}.conf:/etc/nginx/conf.d/default.conf:ro
      - ./cfg/ssl:/ssl
      #- ./cfg/logrotate.nginx:/etc/logrotate.d/nginx:ro
      #- ./logs/:/var/log/nginx/
      - /etc/localtime:/etc/localtime:ro
    networks:
      default:
        aliases:
          - camunda-gateway
    extra_hosts:
      - "camunda:$CAMUNDA"

  camunda-engine1:
    image: camunda-plugins
    container_name: camunda-plugins-engine1-$ENVIRONMENT
    hostname: 'camunda-engine1'
    restart: always
    depends_on:
      - db
    networks:
      default:
    ports:
      - "$CLUSTER_HTTPS_PORT:8443"
    expose:
      - 8080
      - 8443
    volumes:
      - ./cfg/server.xml:/camunda/conf/server.xml:ro
      - ./cfg/ssl/camunda.p12:/camunda/conf/camunda.p12:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - JAVA_OPTS=-Xmx8g -XX:MaxRAMPercentage=25.0 -XX:MaxMetaspaceSize=256m
      - SERVER
      - CAMUNDA_PASSWORD
      - RedisUrls=$REDIS_PORTS
      - RedisPass=$REDIS_PASSWORD
      - DB_DRIVER=org.postgresql.Driver
      - DB_URL=jdbc:postgresql://${DB_PORT}/camunda
      - DB_USERNAME=camunda
      - DB_PASSWORD=camunda
      - DB_CONN_MAXACTIVE=1000
      - WAIT_FOR=${DB_PORT}
      - WAIT_FOR_TIMEOUT=60
      - TZ=Europe/Kiev
      - JMX_PROMETHEUS=false
    extra_hosts:
      - "camunda:$CAMUNDA"

  camunda-engine2:
    image: camunda-plugins
    container_name: camunda-plugins-engine2-$ENVIRONMENT
    hostname: 'camunda-engine2'
    restart: always
    depends_on:
      - db
    networks:
      default:
    ports:
      - "$CLUSTER_HTTPS_PORT2:8443"
    expose:
      - 8080
      - 8443
    volumes:
      - ./cfg/server.xml:/camunda/conf/server.xml
      - ./cfg/ssl/camunda.p12:/camunda/conf/camunda.p12:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - JAVA_OPTS=-Xmx8g -XX:MaxRAMPercentage=25.0 -XX:MaxMetaspaceSize=256m
      - SERVER
      - CAMUNDA_PASSWORD
      - RedisUrls=$REDIS_PORTS
      - RedisPass=$REDIS_PASSWORD
      - DB_DRIVER=org.postgresql.Driver
      - DB_URL=jdbc:postgresql://${DB_PORT}/camunda
      - DB_USERNAME=camunda
      - DB_PASSWORD=camunda
      - DB_CONN_MAXACTIVE=1000
      - WAIT_FOR=${DB_PORT}
      - WAIT_FOR_TIMEOUT=60
      - TZ=Europe/Kiev
      - JMX_PROMETHEUS=false
    extra_hosts:
      - "camunda:$CAMUNDA"

  worker1:
    image: camunda-plugins-worker
    container_name: camunda-plugins-worker1-$ENVIRONMENT
    restart: always
    depends_on:
      - camunda-engine1
      - redis1
    networks:
      default:
    environment:
      - TaskType=InternalService
      - CamundaUrl=http://camunda-engine1:8080/engine-rest
      - RedisUrls=$REDIS_PORTS
      - workerId=worker1
      - JobsToActivate=500
    volumes:
      - ./logs:/logs
      - ./.env:/app/.env:ro
      - ./workers/node/server.js:/app/server.js:ro
      - ./workers/js:/app/js
      - /etc/localtime:/etc/localtime:ro
    extra_hosts:
      - "camunda:$CAMUNDA"

  worker2:
    image: camunda-plugins-worker
    container_name: camunda-plugins-worker2-$ENVIRONMENT
    restart: always
    depends_on:
      - camunda-engine2
      - redis1
    networks:
      default:
    environment:
      - TaskType=InternalService
      - CamundaUrl=http://camunda-engine2:8080/engine-rest
      - RedisUrls=$REDIS_PORTS
      - workerId=worker2
      - JobsToActivate=500
    volumes:
      - ./logs:/logs
      - ./.env:/app/.env:ro
      - ./workers/node/server.js:/app/server.js:ro
      - ./workers/js:/app/js
      - /etc/localtime:/etc/localtime:ro
    extra_hosts:
      - "camunda:$CAMUNDA"

  db:
    image: postgres:14.2
    restart: always
    container_name: camunda-plugins-db-$ENVIRONMENT
    ports:
      - $DB_PORT:5432
    command: postgres -c max_connections=2000
                      -c shared_buffers=1GB
                      -c effective_cache_size=1536MB
                      -c maintenance_work_mem=256MB
                      -c checkpoint_completion_target=0.9
                      -c wal_buffers=16MB
                      -c effective_io_concurrency=200
                      -c min_wal_size=512MB
                      -c max_wal_size=4GB
                      -c max_locks_per_transaction=2000
    networks:
      default:
        aliases:
          - db
    volumes:
      - ./db:/var/lib/postgresql/data
      - ./cfg/setup-replication.sh:/docker-entrypoint-initdb.d/setup-replication.sh:ro
      - ./cfg/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - POSTGRES_PASSWORD=postgres

  pgadmin-nginx:
    image: nginx:1.20.1
    restart: always
    container_name: camunda-plugins-nginx2-$ENVIRONMENT
    depends_on:
      - pgadmin
    ports:
      - "$PGADMIN_PORT:443"
    expose:
      - 443
    volumes:
      - ./cfg/pgadmin.conf:/etc/nginx/conf.d/default.conf:ro
      - ./cfg/ssl:/ssl
      - /etc/localtime:/etc/localtime:ro
    networks:
      default:

  pgadmin:
    image: dpage/pgadmin4:6.2
    container_name: camunda-plugins-pgadmin-$ENVIRONMENT
    restart: always
    depends_on:
      - db
    expose:
      - 80
    networks:
      default:
    volumes:
      - ./cfg/servers.json:/pgadmin4/servers.json:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@postgres.com
      - PGADMIN_DEFAULT_PASSWORD=$PGADMIN_PASSWORD
      - PGADMIN_SERVER_JSON_FILE=/pgadmin4/servers.json

  # odd number of redis for redlock quorum (1 or 3 or more)
  redis1:
    image: redis:6.2.4
    container_name: camunda-plugins-redis1-$ENVIRONMENT
    restart: always
    ports:
      - "$REDIS_PORT1:6379"
    expose:
      - 6379
    networks:
      default:
    volumes:
      - ./redis/1:/data
      - ./cfg/redis.conf:/redis.conf:ro
      - /etc/localtime:/etc/localtime:ro
    command: [ "redis-server", "/redis.conf" ]

  redis2:
    image: redis:6.2.4
    container_name: camunda-plugins-redis2-$ENVIRONMENT
    restart: always
    ports:
      - "$REDIS_PORT2:6379"
    expose:
      - 6379
    networks:
      default:
    volumes:
      - ./redis/2:/data
      - ./cfg/redis.conf:/redis.conf:ro
      - /etc/localtime:/etc/localtime:ro
    command: [ "redis-server", "/redis.conf" ]

  redis3:
    image: redis:6.2.4
    container_name: camunda-plugins-redis3-$ENVIRONMENT
    restart: always
    ports:
      - "$REDIS_PORT3:6379"
    expose:
      - 6379
    networks:
      default:
    volumes:
      - ./redis/3:/data
      - ./cfg/redis.conf:/redis.conf:ro
      - /etc/localtime:/etc/localtime:ro
    command: [ "redis-server", "/redis.conf" ]

networks:
  default:
    name: camunda-plugins-$ENVIRONMENT
    driver: bridge
    driver_opts:
      com.docker.network.enable_ipv6: "false"
    ipam:
      driver: default
      config:
        - subnet: $CLUSTER_NETWORK
